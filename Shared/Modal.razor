@using SerbleWebsite.Data.Schemas

<div class="modal fade show" id="@Id" tabindex="-1" role="dialog" aria-labelledby="@Id Label" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="@Id Label">@Title</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        @Body
      </div>
      <div class="modal-footer">
        @foreach (BootstrapButton button in Buttons) {
          if (button.CloseModal) {
            <button type="button" class="btn btn-@button.Color.ToString().ToLower()" data-dismiss="modal" @onclick="button.OnClick">@button.Text</button>
          }
          else {
            <button type="button" class="btn btn-@button.Color.ToString().ToLower()" @onclick="button.OnClick">@button.Text</button>
          }
        }
        @* <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button> *@
        @* <button type="button" class="btn btn-primary">Save changes</button> *@
      </div>
    </div>
  </div>
</div>

@code {

  [Parameter]
  public string Title { get; set; } = "Modal";

  [Parameter]
  public string Body { get; set; } = "Body Text";

  [Parameter]
  public string Id { get; set; } = "randommodal";

  [Parameter]
  public BootstrapButton[] Buttons { get; set; } = {
    new () {
      CloseModal = true,
      Color = BootstrapColor.Secondary,
      OnClick = () => Task.CompletedTask,
      Text = "Close"
    },
    new () {
      CloseModal = false,
      Color = BootstrapColor.Primary,
      OnClick = () => Task.CompletedTask,
      Text = "Save changes"
    },
  };

}