@page "/Store/Purchase"
@using SerbleWebsite.Data.Schemas
@using SerbleWebsite.Data
@using System.Collections.Specialized
@inject NavigationManager NavigationManager
@inject Localiser Localiser

<RequireLogin Callback="LoginCallback"></RequireLogin>
<LoadScript Script="https://js.stripe.com/v3/"></LoadScript>
<LoadScript Script="https://polyfill.io/v3/polyfill.min.js?version=3.52.1&features=fetch"></LoadScript>

<div class="text-center">
    <h3>@Localiser["wait-while-login"]</h3>
    
    <p>@Localiser["stuck-go-back-to-store"].Replace("[", "<a href=\"/store\">").Replace("]", "</a>").MarkupString()</p>
    
    <br/>
    <h5>Debug Info (Ignore this):</h5>
    <p>Lookup Key: @_product</p>
    <p>User ID: @_userId</p>
</div>

<form action="@(Constants.SerbleApiUrl + "payments/checkout?user_id=" + _userId)" method="POST" id="checkout-form">
    <!-- Price lookup key -->
    <input type="hidden" name="lookup_key" value="@_product"/>
    <button hidden id="checkout-and-portal-button" class="w-100 btn btn-lg btn-primary" type="submit">Subscribe</button>
</form>

@code {
    private string _userId = "";
    private string _product = "";

    private async Task LoginCallback((User?, string) data) {
        Console.WriteLine($"Logged in {data.Item1!.Username} for purchase");

        NameValueCollection queryValues = NavigationManager.GetQueryStrings();
        _product = queryValues["product"] ?? throw new Exception("No lookup key provided");

        _userId = data.Item1!.Id!;
        Console.WriteLine("User id: " + _userId);

        SerbleApiResponse<string> checkoutResp = await SerbleApiHandler.GetCheckoutUrl(data.Item2, new []{ _product });
        if (!checkoutResp.Success) {
            Console.WriteLine(checkoutResp.ErrorMessage);
            return;
        }
        
        Console.WriteLine("Checkout URL: " + checkoutResp.ResponseObject);
        NavigationManager.NavigateTo(checkoutResp.ResponseObject!);
    }
    
}